#!/bin/bash

# Detect and the compile a single file accordingly
crun() {
    _has_extension() {
        echo -n "$1" | grep -q "^.*\.$2"
    }

    f="$1"
    rem=(${@[@]:2})  # All the elements from 2nd to last index

    if [ -z "$f" ]; then
        echo Provide a single file as an argument to compile and run 1>&2
        return 1
    else
        if _has_extension "$f" cpp; then
            _crun_cpp "$f" $(basename -s .cpp "$f") $rem
        elif _has_extension "$f" c; then
            _crun_c "$f" $(basename -s .c "$f") "$rem"
        elif _has_extension "$f" rs; then
            _crun_rust "$f" $(basename -s .rs "$f") "$rem"
        else
            echo Unsupported type of file $f
        fi
    fi
}

_crun_cpp() {
    rem=(${@[@]:3})
    if [ ! -f "$2" ] || [ "$1" -nt "$2" ]; then
        g++ -std=c++17 $rem -o "$2" "$1" && ./"$2"
    else
        ./"$2"
    fi
}

_crun_c() {
    rem=(${@[@]:3})
    if [ "$1" -nt "$2" ]; then
        gcc $rem -o "$2" "$1" && ./"$2"
    else
        ./"$2"
    fi
}

_crun_rust() {
    rem=(${@[@]:3})
    if [ "$1" -nt "$2" ]; then
        rustc $rem -o "$2" "$1" && ./"$2"
    else
        ./"$2"
    fi
}

# Other variations
crun_logl() {  # crun for LearnOpenGL or the likes of it
    # crun "$1" $(pkg-config glfw3 --libs) -L. libglad.so libccamera.so libcshader.so libstb_image.so
    crun "$1" $2 -Wno-attributes -I $HOME/.local/include -L. libccamera.so libcshader.so libstb_image.so $(pkg-config wayland-client wayland-egl egl xkbcommon --libs) -ldl -lrt glad.c wayland-xdg-shell.c wayland-pointer-constraints.c wayland-relative-pointer.c logger.cpp waywindow.cpp
}

export LD_LIBRARY_PATH=".:$HOME/.local/lib:/usr/local/lib64:$LD_LIBRARY_PATH"

crun_wayland() {
    crun "$1" "$2" -Wno-attributes $(pkg-config wayland-client --libs) -lrt
}
